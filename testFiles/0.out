Output for test 0: Basic
Assembly:

.orig x3000
add r0 r0 r0
halt
.end

START SIMULATOR OUTPUT

LC-3b Simulator

Loading Control Store from file: ucode3

Read 2 words from program into memory.

LC-3b-SIM> 
Simulating...

in microsequencer
CYCLE_COUNT = 0
state number = 18
current pc = 0x3000
IRD = 0
j = 33
in cycle_memory
in drive_bus
putting current pc on bus
current pc = 0x3000
putting busval into MAR
loading new pc
old PC = 0x3000, new PC = 0x3002

in microsequencer
CYCLE_COUNT = 1
state number = 33
current pc = 0x3002
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 1
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3000
mdr = 0x1000

in microsequencer
CYCLE_COUNT = 2
state number = 33
current pc = 0x3002
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 2
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3000
mdr = 0x1000

in microsequencer
CYCLE_COUNT = 3
state number = 33
current pc = 0x3002
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 3
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3000
mdr = 0x1000

in microsequencer
CYCLE_COUNT = 4
state number = 33
current pc = 0x3002
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 4
Latching ready bit
incrmenting mem_counter
in drive_bus
performing word read into mdr
mar = 0x3000
mdr = 0x1000

in microsequencer
CYCLE_COUNT = 5
state number = 33
current pc = 0x3002
IRD = 0
READY = 1, incrementing j by 2
j = 35
in cycle_memory
Memory I/O Enabled
mem_counter = 5
in drive_bus
performing word read into mdr
mar = 0x3000
mdr = 0x1000

in microsequencer
CYCLE_COUNT = 6
state number = 35
current pc = 0x3002
IRD = 0
j = 32
in cycle_memory
in drive_bus
putting MDR onto bus
busVal = 0X1000

in microsequencer
CYCLE_COUNT = 7
state number = 32
current pc = 0x3002
IRD = 1
CURRENT_LATCHES.IR = 0x1000
opcode = 1
in cycle_memory
in drive_bus

in microsequencer
CYCLE_COUNT = 8
state number = 1
current pc = 0x3002
IRD = 0
j = 18
in cycle_memory
in drive_bus
putting ALU val on BUS
busVal = 0X0000
loading BUS = 0x0000, into REGS[0]

in microsequencer
CYCLE_COUNT = 9
state number = 18
current pc = 0x3002
IRD = 0
j = 33
in cycle_memory
in drive_bus
putting current pc on bus
current pc = 0x3002
putting busval into MAR
loading new pc
old PC = 0x3002, new PC = 0x3004

in microsequencer
CYCLE_COUNT = 10
state number = 33
current pc = 0x3004
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 1
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3002
mdr = 0xf025

in microsequencer
CYCLE_COUNT = 11
state number = 33
current pc = 0x3004
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 2
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3002
mdr = 0xf025

in microsequencer
CYCLE_COUNT = 12
state number = 33
current pc = 0x3004
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 3
incrementing mem_counter
in drive_bus
performing word read into mdr
mar = 0x3002
mdr = 0xf025

in microsequencer
CYCLE_COUNT = 13
state number = 33
current pc = 0x3004
IRD = 0
j = 33
in cycle_memory
Memory I/O Enabled
mem_counter = 4
Latching ready bit
incrmenting mem_counter
in drive_bus
performing word read into mdr
mar = 0x3002
mdr = 0xf025

in microsequencer
CYCLE_COUNT = 14
state number = 33
current pc = 0x3004
IRD = 0
READY = 1, incrementing j by 2
j = 35
in cycle_memory
Memory I/O Enabled
mem_counter = 5
in drive_bus
performing word read into mdr
mar = 0x3002
mdr = 0xf025

in microsequencer
CYCLE_COUNT = 15
state number = 35
current pc = 0x3004
IRD = 0
j = 32
in cycle_memory
in drive_bus
putting MDR onto bus
busVal = 0Xf025

in microsequencer
CYCLE_COUNT = 16
state number = 32
current pc = 0x3004
IRD = 1
CURRENT_LATCHES.IR = 0xf025
opcode = 15
in cycle_memory
in drive_bus

in microsequencer
CYCLE_COUNT = 17
state number = 15
current pc = 0x3004
IRD = 0
j = 28
in cycle_memory
in drive_bus
marmux = 0, putting lshf(zext(IR)) on bus
IR = 0xf025
busVal = 0X004a
putting busval into MAR

in microsequencer
CYCLE_COUNT = 18
state number = 28
current pc = 0x3004
IRD = 0
j = 28
in cycle_memory
Memory I/O Enabled
mem_counter = 1
incrementing mem_counter
in drive_bus
putting current pc on bus
current pc = 0x3004
performing word read into mdr
mar = 0x004a
mdr = 0x0000
loading BUS = 0x3004, into REGS[7]

in microsequencer
CYCLE_COUNT = 19
state number = 28
current pc = 0x3004
IRD = 0
j = 28
in cycle_memory
Memory I/O Enabled
mem_counter = 2
incrementing mem_counter
in drive_bus
putting current pc on bus
current pc = 0x3004
performing word read into mdr
mar = 0x004a
mdr = 0x0000
loading BUS = 0x3004, into REGS[7]

in microsequencer
CYCLE_COUNT = 20
state number = 28
current pc = 0x3004
IRD = 0
j = 28
in cycle_memory
Memory I/O Enabled
mem_counter = 3
incrementing mem_counter
in drive_bus
putting current pc on bus
current pc = 0x3004
performing word read into mdr
mar = 0x004a
mdr = 0x0000
loading BUS = 0x3004, into REGS[7]

in microsequencer
CYCLE_COUNT = 21
state number = 28
current pc = 0x3004
IRD = 0
j = 28
in cycle_memory
Memory I/O Enabled
mem_counter = 4
Latching ready bit
incrmenting mem_counter
in drive_bus
putting current pc on bus
current pc = 0x3004
performing word read into mdr
mar = 0x004a
mdr = 0x0000
loading BUS = 0x3004, into REGS[7]

in microsequencer
CYCLE_COUNT = 22
state number = 28
current pc = 0x3004
IRD = 0
READY = 1, incrementing j by 2
j = 30
in cycle_memory
Memory I/O Enabled
mem_counter = 5
in drive_bus
putting current pc on bus
current pc = 0x3004
performing word read into mdr
mar = 0x004a
mdr = 0x0000
loading BUS = 0x3004, into REGS[7]

in microsequencer
CYCLE_COUNT = 23
state number = 30
current pc = 0x3004
IRD = 0
j = 18
in cycle_memory
in drive_bus
putting MDR onto bus
busVal = 0X0000
loading new pc
old PC = 0x3004, new PC = 0x0000

Simulator halted

LC-3b-SIM> 

Current register/bus values :
-------------------------------------
Cycle Count  : 24
PC           : 0x0000
IR           : 0xf025
STATE_NUMBER : 0x0012

BUS          : 0x0000
MDR          : 0x0000
MAR          : 0x004a
CCs: N = 0  Z = 1  P = 0
Registers:
0: 0x0000
1: 0x0000
2: 0x0000
3: 0x0000
4: 0x0000
5: 0x0000
6: 0x0000
7: 0x3004

LC-3b-SIM> 
Bye.
